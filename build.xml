<?xml version="1.0" encoding="UTF-8"?>
<project name="nTorrent" default="help" basedir=".">
	<property name="app.name" value="nTorrent" />
	<property name="app.version" value="0.5-alpha" />

	<property name="build.home" value="${basedir}/build" />
	
	<property name="launch4j.dir" value="lib/launch4j" />
	<property name="launch4j.config" value="${basedir}/launch4j.xml" />

	<path id="classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>

	<typedef resource="org/java/plugin/tools/ant/jpf-tasks.properties">
		<classpath refid="classpath" />
	</typedef>
	
	<taskdef name="launch4j"
	    classname="net.sf.launch4j.ant.Launch4jTask"
	    classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />

	<target name="help">
		<echo>
			<![CDATA[
${app.name} build file:
clean - cleans up the project build folder
build - builds entire project
run   - runs application
check - checks plug-ins integrity
docs  - generates plug-ins documentation
dist  - creates binary and source distribution packages
test  - runs some tests
]]>
		</echo>
	</target>

	<target name="clean" description="Cleans up the project build folder">
		<tstamp>
			<format property="dt-stamp" pattern="yyyy-MM-dd-HH-mm" />
			<format property="d-stamp" pattern="yyyy-MM-dd" />
		</tstamp>
		<delete dir="${build.home}" quiet="true" />
	</target>

	<target name="-init">
		<mkdir dir="${build.home}" />
	</target>

	<target name="-build-plugins">
		<mkdir dir="${build.home}/plugins" />
		<ant dir="plugins/redstone.xmlrpc" target="${target}" />
		<ant dir="plugins/ntorrent.data" target="${target}" />
		<ant dir="plugins/ntorrent.locale" target="${target}" />
		<ant dir="plugins/ntorrent.mvc" target="${target}" />
		<ant dir="plugins/ntorrent.tools" target="${target}" />
		<ant dir="plugins/ntorrent.profile" target="${target}" />
		<ant dir="plugins/ntorrent.io.rtorrent" target="${target}" />
		<ant dir="plugins/ntorrent.io.xmlrpc" target="${target}" />
		<ant dir="plugins/ntorrent.torrenttable" target="${target}" />
		<ant dir="plugins/ntorrent.jpf" target="${target}" />
		<ant dir="plugins/ntorrent.session" target="${target}" />
		<ant dir="plugins/ntorrent" target="${target}" />
		<ant dir="plugins/ntorrent.skins" target="${target}" />
		<ant dir="plugins/ntorrent.torrentlabels" target="${target}" />
		<ant dir="plugins/ntorrent.torrenttable.sorter" target="${target}" />
		<ant dir="plugins/ntorrent.trayicon" target="${target}" />
		<ant dir="plugins/ntorrent.torrentfiles" target="${target}" />
		<ant dir="plugins/ntorrent.torrenttrackers" target="${target}" />
		<ant dir="plugins/ntorrent.torrentinfo" target="${target}" />
		<ant dir="plugins/ntorrent.statusbar.throttle" target="${target}" />
		<!--<ant dir="plugins/ntorrent.settings" target="${target}" />-->
		<!--<ant dir="plugins/ntorrent.protocol.localtools" target="${target}" />-->
		<!--<ant dir="plugins/ntorrent.protocol.sshtools" target="${target}" />-->
	</target>

	<target name="build" depends="-init" description="Builds entire project">
		<antcall target="-build-plugins">
			<param name="target" value="build" />
		</antcall>
		<copy todir="${build.home}/lib">
			<fileset dir="lib" includes="*.jar" />
		</copy>
		<copy todir="${build.home}">
			<fileset dir="." includes="README,LICENSE,*.*" />
		</copy>
	</target>

	<target name="run" depends="build" description="Runs application">
		<java jar="${build.home}/lib/jpf-boot.jar"
		      dir="${build.home}"
		      fork="true" />
	</target>

	<target name="check"
	        depends="build"
	        description="Checks plug-ins integrity">
		<jpf-check basedir="${basedir}/plugins"
		           includes="*/plugin.xml,*/plugin-fragment.xml"
		           verbose="true"
		           usepathresolver="true" />
	</target>

	<target name="docs"
	        depends="build"
	        description="Generates plug-ins documentation">
		<delete dir="${build.home}/docs" />
		<mkdir dir="${build.home}/docs" />
		<antcall target="-build-plugins">
			<param name="target" value="docs" />
		</antcall>
		<jpf-doc basedir="${build.home}/plugins"
		         includes="*/plugin.xml,*/plugin-fragment.xml"
		         destdir="${build.home}/docs" />
	</target>
	
	<target name="dist"
	        depends="clean,build"
	        description="Prepares distribution packages">
		
		<!-- create exe file for the poor windows users -->
		<launch4j configFile="${launch4j.config}" 
			outfile="${build.home}/${app.name}.exe"/>
		
		<zip destfile="${build.home}/${app.name}-bin-${app.version}.zip"
		     duplicate="fail"
		     update="false">
			<fileset dir="${build.home}" includes="**/*" excludes="codetemplates.xml,${launch4j.config},build.xml,.*"/>
		</zip>
		<zip destfile="${build.home}/${app.name}-src-${app.version}.zip"
		     duplicate="fail"
		     update="false">
			<fileset dir="${basedir}"
			         excludes="build,**/classes/**,.check*,.fb*,nbproject/private/**,build/**,logs/**,data/**,temp/**,*.zip,todo.txt,.settings/**" />
		</zip>
		<delete includeemptydirs="true">
			<fileset dir="${build.home}">
				<include name="**/*" />
				<exclude name="${app.name}-???-${app.version}.zip" />
			</fileset>
		</delete>
	</target>

	<target name="test" depends="build" description="Some tests">
		<jpf-pack basedir="${build.home}/plugins"
		          includes="*/plugin.xml,*/plugin-fragment.xml"
		          destfile="${build.home}/all-plugins.jpa" />
		<mkdir dir="${build.home}/all-plugins-extracted" />
		<jpf-unpack srcfile="${build.home}/all-plugins.jpa"
		            destdir="${build.home}/all-plugins-extracted" />
	</target>
</project>
